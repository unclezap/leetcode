// https://leetcode.com/problems/integer-break/

var integerBreak = function(n) {
    if (n < 4) {
        return n - 1
    }
    switch (n % 3) {
        case 0:
            return 3**(n/3)
        case 1:
            return 3**(Math.floor(n/3) - 1) * 4
        case 2:
            return 3**(Math.floor(n/3)) * 2
    }
};

for (let i=2; i < 14; i++) {
    console.log(integerBreak(i))
}

// 2
// 1 * 1 = 1
// ===
// 3
// 2 * 1 = 2
// ===
// 4
// 2 * 2 = 4
// 3 * 1 = 3
// ===
// 5
// 2 * 3 = 6
// 4 * 1 = 4
// ===
// 6
// 2 * 2 * 2 = 8
// 3 * 3 = 9
// ===
// 7
// 2 * 2 * 3 = 12
// ===
// 8
// 2 * 2 * 2 * 2 = 16
// 3 * 3 *  2 = 18
// 4 * 4 = 16
// ===
// 9
// 3 * 3 * 3 = 27
// 2 * 2 * 2 * 3 = 24
// 5 * 4 = 20
// ===
// 10
// 2 * 2 * 2 * 2 * 2 = 32
// 3 * 3 * 4 = 36
// ===
// 11
// 2 ^4 * 3 = 48
// 3^3 * 2 = 54
// ===
// 12
// 2 ^ 6 = 64
// 3 ^ 4 = 81
// ===
// 13
// 3 ^ 3 * 4 = 112
// 2^5 * 3 = 96
// ===
// 20
// 7 * 7 * 3 * 3 = 441
// 2 ^ 10 = 1024
// 3 ^ 6 
